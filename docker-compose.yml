version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-writing-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_TIMEOUT=${OPENAI_TIMEOUT:-20}
      - OPENAI_MAX_RETRIES=${OPENAI_MAX_RETRIES:-2}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:80}
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-60}
      - RATE_LIMIT_PER_HOUR=${RATE_LIMIT_PER_HOUR:-1000}
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    networks:
      - ai-writing-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on: []

  # Frontend Web Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-writing-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - frontend_logs:/var/log/nginx
    networks:
      - ai-writing-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service (optional)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-writing-backend-dev
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_TIMEOUT=${OPENAI_TIMEOUT:-20}
      - OPENAI_MAX_RETRIES=${OPENAI_MAX_RETRIES:-2}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:80}
    volumes:
      - ./backend:/app
    networks:
      - ai-writing-network
    profiles:
      - dev
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  backend_logs:
    driver: local
  frontend_logs:
    driver: local

networks:
  ai-writing-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
