name: CI - Pull Request

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  # Backend Testing
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12-${{ hashFiles('backend/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run linting
        working-directory: ./backend
        run: |
          make lint

      - name: Run unit tests
        working-directory: ./backend
        run: |
          make test

      - name: Run security tests
        working-directory: ./backend
        run: |
          make test-security

  # Frontend Testing
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linting
        working-directory: ./frontend
        run: npm run lint

      - name: Build application
        working-directory: ./frontend
        run: npm run build

  # Docker Build Test
  docker-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: ai-writing-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: ai-writing-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker containers
        run: |
          docker-compose up -d
          sleep 30
          curl -f http://localhost:8000/health
          curl -f http://localhost:80/
          docker-compose down
